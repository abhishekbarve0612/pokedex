{"version":3,"sources":["logo.svg","customHooks/useFetch.js","components/ListItem.js","components/Header.js","components/PokemonInfo.js","components/PokeLists.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","data","setData","error","setError","isLoading","setIsLoading","useEffect","abortCont","AbortController","fetch","signal","then","res","json","catch","err","name","message","abort","ListItem","pokes","console","log","className","map","poke","key","id","to","Header","PokemonInfo","useParams","info","src","sprites","other","dream_world","front_default","alt","height","weight","abilities","ability","moves","move","stats","stat","base_stat","effort","PokeLists","offset","page","parseInt","API_URL","pokemon","results","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.023527e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {useState, useEffect} from 'react';\r\nconst useFetch = (url) => {\r\n  \r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n    fetch(url, {signal: abortCont.signal })\r\n    .then((res) => res.json())\r\n    .then(data => {\r\n      setIsLoading(false);\r\n      setData(data);\r\n      setError(null);\r\n    }).catch(err => {\r\n      if (err.name === 'AbortError'){\r\n\r\n      } else {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      abortCont.abort();\r\n    }\r\n  }, [url])\r\n\r\n  return {data, isLoading, error};\r\n}\r\n\r\nexport default useFetch;","import { Link } from \"react-router-dom\";\r\n\r\nconst ListItem = ({pokes}) => {\r\n  console.log(pokes[1].name);\r\n  return ( \r\n    <div className=\"pokemon-lists\">\r\n        {pokes.map((poke, key) => (\r\n          <li className=\"pokemon-item\" id={key}>\r\n            <div className=\"sr-no\">{key + 1}.</div>\r\n            <div className=\"poke-name\">\r\n            {poke.name}\r\n            </div>\r\n            <div className=\"info-button\">\r\n            <Link to={`/pokemon/${poke.name}`}>Click Here</Link>\r\n            </div>\r\n            </li>\r\n        ))}\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default ListItem;","import {Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return ( \r\n    <div>\r\n      <Link to=\"/\">\r\n      <h3>Pokedex</h3>\r\n      </Link>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Header;","import useFetch from \"../customHooks/useFetch\";\r\nimport {useParams, Link} from 'react-router-dom';\r\nconst PokemonInfo = () => {\r\n  const {id} = useParams();\r\n  const { data: info, isLoading, error} = useFetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n  if (info != null) console.log(info);\r\n  return ( \r\n    <div className=\"poke-info\">\r\n      {info && <div>\r\n      {error && <h3>{error}</h3> }\r\n      {isLoading && <h3>Loading...</h3>}\r\n      {info && <div className=\"pokemon-info\">\r\n        <h1 className=\"poke-name\">\r\n          {info.name}\r\n        </h1>\r\n          <img src={info.sprites.other.dream_world.front_default} alt=\"\"/>\r\n          <div className=\"description\">\r\n            <div className=\"info-card\">\r\n              <h3 className=\"data\">ID</h3>\r\n              <div className=\"value\">{info.id}</div>\r\n            </div>\r\n            <div className=\"info-card\">\r\n              <h3 className=\"data\">Height</h3>\r\n              <div className=\"value\">{info.height}</div>\r\n            </div>\r\n            <div className=\"info-card\">\r\n              <h3 className=\"data\">Weight</h3>\r\n              <div className=\"value\">{info.weight}</div>\r\n            </div>\r\n            <div className=\"info-card\">\r\n              <h3 className=\"data\">Abilities</h3>\r\n              <div className=\"value\">\r\n                <>\r\n                  {info.abilities.map((ability, key) =>(\r\n                    <div id={key}>{ability.ability.name}</div>\r\n                  ))}\r\n                </>\r\n              </div>\r\n            </div>\r\n            <div className=\"info-card\">\r\n              <h3 className=\"data\">Moves</h3>\r\n              <div className=\"value\">\r\n              <>\r\n                  {info.moves.map((move, key) =>(\r\n                    <div id={key}>{move.move.name}</div>\r\n                  ))}\r\n                </>\r\n              </div>\r\n            </div>\r\n            {info.stats.map((stat, key) => (\r\n              <div className=\"info-card\">\r\n                <div className=\"data\">\r\n                  {stat.stat.name}\r\n                </div>\r\n                <div className=\"value\">\r\n                  <div>\r\n                  <span>Base Stat:</span> {stat.base_stat}\r\n                  </div>\r\n                  <div>\r\n                  <span>Effort:</span> {stat.effort}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>}\r\n        </div>}\r\n        <div className=\"button\">\r\n          <Link to=\"/\">Go Back To HOME</Link>\r\n        </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default PokemonInfo;","import { useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport useFetch from \"../customHooks/useFetch\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nconst PokeLists = () => {\r\n  let {page} = useParams(), offset;\r\n  if (page == null) {\r\n    offset = 0;\r\n    page = 0;\r\n  }\r\n  else offset = 15 * parseInt(page);\r\n  console.log(offset);\r\n  const API_URL = `https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=15`;\r\n  const { data:pokemon, isLoading, error} = useFetch(API_URL);\r\n  let pokes = null;\r\n  if (isLoading == false && pokemon != null) {\r\n    console.log(pokemon.results[0]);\r\n    pokes = pokemon.results;\r\n  }\r\n  return ( \r\n    <>\r\n    <div className=\"pokelist\">\r\n      {error && <h3>{error}</h3> }\r\n      {isLoading && <h3>Loading...</h3>}\r\n      {pokemon && <ListItem pokes={pokes} />}\r\n    </div>\r\n    <div className=\"pagination\">\r\n        {(page - 1) > -1 && \r\n          <div className=\"button\">\r\n          <Link to={`/${page - 1}`}>Previous</Link>\r\n          </div>\r\n          }\r\n          <div className=\"button\">\r\n            <Link to={`/${parseInt(page)+2}`}>{page + 2}</Link>\r\n          </div>\r\n          <div className=\"button\">\r\n            <Link to={`/${parseInt(page)+3}`}>{page + 3}</Link>\r\n          </div>\r\n          <div className=\"button\">\r\n            <Link to={`/${parseInt(page)+4}`}>{page + 4}</Link>\r\n          </div>\r\n        <div className=\"button\">\r\n          <Link to={`/${parseInt(page) + 1}`}>Next</Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n   );\r\n}\r\n \r\nexport default PokeLists;","import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport useFetch from './customHooks/useFetch';\nimport ListItem from './components/ListItem';\nimport Header from './components/Header';\nimport PokemonInfo from './components/PokemonInfo';\nimport PokeLists from './components/PokeLists';\nimport './components/style.css';\n\nfunction App() {\n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"header\">\n          <Header />\n        </div>\n        <div className=\"main-container\">\n        <Switch>\n          <Route exact path=\"/:page?\">\n            <PokeLists />\n          </Route>\n          <Route exact path=\"/pokemon/:id\">\n            <PokemonInfo />\n          </Route>\n        </Switch>\n        </div>\n      </div>\n    </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}